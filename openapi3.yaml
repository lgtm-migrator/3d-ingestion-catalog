openapi: 3.0.1
info:
  title: 3d ingestion catalog
  description: Service to create 3d ingestion catalog
  version: 2.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /metadata:
    get:
      operationId: getAll
      summary: Get all 3d models metadata records
      tags:
        - metadata
      responses:
        '200':
          $ref: '#/components/responses/list'
        '204':
          description: No Content
        5XX:
          $ref: '#/components/responses/unexpectedError'
    post:
      operationId: createRecord
      summary: Create a new 3d model metadata record
      tags:
        - metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/catalog-payload
      responses:
        '201':
          $ref: '#/components/responses/created'
        '400':
          $ref: '#/components/responses/badRequest'
        5XX:
          $ref: '#/components/responses/unexpectedError'
  /metadata/{identifier}:
    get:
      operationId: getRecord
      summary: Get a specific 3d model metadata record by record identifier
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/notFound'
        5XX:
          $ref: '#/components/responses/unexpectedError'
    put:
      operationId: updateRecord
      summary: Update 3d model metadata record fields
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './Schema/3dCatalog/3dMetadata.yaml#/components/schemas/metadata'
      responses:
        '200':
          $ref: '#/components/responses/success'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
        5XX:
          $ref: '#/components/responses/unexpectedError'
    patch:
      operationId: updatePartialRecord
      summary: Update partial 3d model metadata record fields
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './Schema/3dCatalog/3dMetadata.yaml#/components/schemas/updatePayload'
      responses:
        '200':
          $ref: '#/components/responses/success'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notFound'
        5XX:
          $ref: '#/components/responses/unexpectedError'
    delete:
      operationId: deleteRecord
      summary: Delete a specific 3d model metadata record by record identifier
      tags:
        - metadata
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        '204':
          description: No Content
        5XX:
          $ref: '#/components/responses/unexpectedError'
components:
  parameters:
    identifier:
      in: path
      name: identifier
      required: true
      schema:
        type: string
      description: Metadata record identifier
  responses:
    success:
      description: OK
      content:
        application/json:
          schema:
            $ref: './Schema/3dCatalog/3dMetadata.yaml#/components/schemas/metadata'
    list:
      description: OK
      content:
        application/json:
          schema:
            $ref: './Schema/3dCatalog/3dMetadata.yaml#/components/schemas/metadata'
    created:
      description: Created
      content:
        application/json:
          schema:
            $ref: './Schema/3dCatalog/3dMetadata.yaml#/components/schemas/metadata'
    badRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    notFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    unexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  schemas:
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string